sudo: false
dist: trusty
language: php
cache:
  apt: true
  directories:
    - node_modules
    - vendor
    - $HOME/.composer/cache
env:
  global:
    - WP_TRAVISCI=travis:phpunit
matrix:
  include:
  - php: 7.3.0RC1
    sudo: required
    dist: xenial
    services: mysql
    addons:
      apt:
        packages:
          - libzip4
  - name: "Windows - PHP 7.2"
    php: 7.2
    os: windows
    services: mysql
  - php: 7.2
    env: WP_TRAVISCI=travis:format
  - php: 7.1
    env: WP_TRAVISCI=travis:js
  - php: 7.2
  - php: 7.1
  - php: 7.0
    env: WP_TEST_REPORTER=true
  - php: 5.6
  - php: 5.6
    env: WP_TRAVIS_OBJECT_CACHE=true
    services: memcached
  - php: 5.5
  - php: 5.4
  - php: 5.3
    dist: precise
  - php: 5.2
    dist: precise
  - php: nightly
  allow_failures:
  - php: nightly
  - php: 7.3.0RC1
before_install:
- |
  if [[ "$WP_TRAVISCI" == "travis:phpunit" ]]; then
      mysql -u root -e "CREATE DATABASE wordpress_tests;"
      cp wp-tests-config-sample.php wp-tests-config.php
      sed -i "s/youremptytestdbnamehere/wordpress_tests/" wp-tests-config.php
      sed -i "s/yourusernamehere/root/" wp-tests-config.php
      sed -i "s/yourpasswordhere//" wp-tests-config.php
      travis_retry svn checkout https://plugins.svn.wordpress.org/wordpress-importer/tags/0.6.3/ tests/phpunit/data/plugins/wordpress-importer
  fi
- |
  if [[ "$WP_TRAVIS_OBJECT_CACHE" == "true" ]]; then
    cp tests/phpunit/includes/object-cache.php src/wp-content/object-cache.php
    echo "extension = memcached.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
  fi
before_script:
- |
  # Remove Xdebug for a huge performance increase:
  if [ -f ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini ]; then
    phpenv config-rm xdebug.ini
  else
    echo "xdebug.ini does not exist"
  fi
- |
  # Export Composer's global bin dir to PATH, but not on PHP 5.2:
  if [[ ${TRAVIS_PHP_VERSION:0:3} != "5.2" ]]; then
    composer config --list --global
    export PATH=`composer config --list --global | grep '\[home\]' | { read a; echo "${a#* }/vendor/bin:$PATH"; }`
  fi
- |
  # Install the specified version of PHPUnit depending on the PHP version:
  if [[ "$WP_TRAVISCI" == "travis:phpunit" ]]; then
    case "$TRAVIS_PHP_VERSION" in
      7.3.0RC1|7.2|7.1|7.0|nightly)
        echo "Using PHPUnit 6.x"
        travis_retry composer global require "phpunit/phpunit:^6"
        ;;
      5.6|5.5|5.4|5.3)
        echo "Using PHPUnit 4.x"
        travis_retry composer global require "phpunit/phpunit:^4"
        ;;
      5.2)
        # Do nothing, use default PHPUnit 3.6.x
        echo "Using default PHPUnit, hopefully 3.6"
        ;;
      *)
        echo "No PHPUnit version handling for PHP version $TRAVIS_PHP_VERSION"
        exit 1
        ;;
    esac
  fi
- |
  # We only need to run composer install on the code formatting job.
  if [[ "$WP_TRAVISCI" == "travis:format" ]]; then
    composer --version
    travis_retry composer install
  fi
- npm --version
- node --version
- nvm install 8.9.3
- npm install -g grunt-cli
- npm install
- npm prune
- mysql --version
- phpenv versions
- php --version
- php -m
- npm --version
- node --version
- which phpunit
- phpunit --version
- curl --version
- grunt --version
- git --version
- svn --version
- locale -a
script: grunt $WP_TRAVISCI
after_script:
- |
  if [[ "$WP_TEST_REPORTER" == "true" ]]; then
    git clone https://github.com/WordPress/phpunit-test-runner.git test-runner
    export WPT_PREPARE_DIR=$(pwd)
    export WPT_TEST_DIR=$(pwd)
    php test-runner/report.php
  fi
notifications:
  slack:
    secure: lih3IWJqM6ppyK17lTElNOso2pgWgdi325QkYQiuluk2rOf7t5IuE+hHuO81TG8nC1ySQccbeNOoL+qQwMmb20ER5yHHndlh2Ml1i9LgL+RInstkqAtmU9uhAmvlS0n5L55aeGCjE3+IOLyNwCHxaC6xPdAl9uASN8hpQlqD4kg=
